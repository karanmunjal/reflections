How did viewing a diff between two versions of a file help you see the bug that
 was introduced?


    it gave the exact line of code of the two files where there was difference. so it was easy to find the mistake. 


--How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?


    if anyone in the group made a mistake, the action can be reverted by using undo. 
    if we are doing an experiment on the code, and it didn't go well, we can always go to the original code.
    


--What do you think are the pros and cons of manually choosing when to create a 
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?


     one commit per logical change should be done, so its the advantage of using Git.
     if it is automatically saved then file may be saved, even the command is not complete which will not make sense any sense.
     in git, commit should not be made like after every typo mistake, in that there will be several commits and it would be difficult to view the history.


--Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?


    it is a great advantage saving multiple files in one commit, otherwise it would be difficult to view which file was edited at what time.      


--How can you use the commands git log and git diff to view the history of files?

    
    git log gives the whole log of the project along with id, user and a comment.
    git diff gives the difference between two files, along with it it can also show the difference between changes made in successive sessions, by using log id.  


How might using version control make you more confident to make changes that
could break something?

    
    we can always compare the difference between the current file and original file. 



Now that you have your workspace set up, what do you want to try using Git for?


    To save all my project work in Git.